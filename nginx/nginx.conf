server {
    listen 80;

    server_name localhost;

    # Redirect HTTP traffic to HTTPS
    return 302 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;

    server_name localhost;

    ssl_certificate     /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    # Handle favicon requests
    location = /favicon.ico {
        rewrite ^ /favicon.svg;
    }

    # Proxy all API-related requests to the backend
    location /api {
        rewrite ^/api(/.*)$ /$1 break;  # Remove `/api` prefix

        proxy_pass http://app:3000;  # `app` is the service name in docker-compose
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket and cache bypass settings
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }

    # Handle Swagger UI for API documentation with Basic Auth
    location /api/docs {
        rewrite ^/api(/.*)$ /$1 break;  # Strip `/api` from the path

        proxy_pass http://app:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Protect with Basic Auth
        auth_basic "Restricted API Documentation";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # WebSocket proxy settings
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Serve static Swagger UI files with caching
    location /docs/static/ {
        proxy_pass http://app:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Enable browser caching
        expires 7d;
        add_header Cache-Control "public, max-age=604800";

        # Protect static files with Basic Auth
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # Additional caching rules
        proxy_cache_valid 200 7d;
        proxy_cache_bypass $http_cache_control;
        proxy_no_cache $http_pragma $http_authorization;
    }

    # Custom 404 error page
    error_page 404 /404.html;

    location = /404.html {
        root /usr/share/nginx/html;  # Nginx default directory for HTML
        internal;  # Block direct access
    }

    # Serve files from the `/static/` directory
    location /static/ {
        root /usr/share/nginx/static;
        try_files $uri $uri/ =404;
    }

    # Serve static HTML for root requests
    location / {
        root /usr/share/nginx/html;
        index index.html;
    }
}
