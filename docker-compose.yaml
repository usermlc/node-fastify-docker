services:
  webapp:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - net-webapp
      - net-mongo
      - net-postgres
    ports:
      - ${DEV_WEB_PORT:-}   # Port for attaching debugger during development
    volumes:
      - .:/usr/src/app      # Mounting current directory to the container's app folder
    environment:
      - NODE_ENV=${NODE_ENV:-development}     # Node.js environment (development/production)
      - HOST=${APP_HOST:-0.0.0.0}             # Host address
      - PORT=${APP_PORT:-3000}                # Application port
      - REBUILD_CLIENT=${REBUILD_PRISMA_CLIENT:-}  # Flag for rebuilding Prisma client if required
      - PG_CONNECTION_STRING=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${PG_PORT:-5432}/${POSTGRES_DB}?schema=public
      #- MONGO_CONNECTION_STRING=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:${MONGO_PORT:-27017}/${MONGO_DB}
      - MONGO_CONNECTION_STRING=mongodb://mongo:${MONGO_PORT:-27017}/${MONGO_DB}   # MongoDB connection string
    depends_on:
      - db_postgres      # Ensures PostgreSQL service starts before the app
      - db_mongo         # Ensures MongoDB service starts before the app

  db_postgres:
    image: postgres:latest
    networks:
      - net-postgres
    ports:
      - ${DEV_PG_PORT:-}    # Port for PostgreSQL (only in development)
    volumes:
      - pgdata:/var/lib/postgresql/data  # Persist PostgreSQL data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}       # Database name
      - POSTGRES_USER=${POSTGRES_USER}   # Database user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}   # Database password

  db_mongo:
    image: mongo:latest
    networks:
      - net-mongo
    ports:
      - ${DEV_MONGO_PORT:-}   # Port for MongoDB (only in development)
    volumes:
      - mongodata:/data/db    # Persist MongoDB data
    # environment:
    #   - MONGO_INITDB_DATABASE=admin            # Initial MongoDB database
    #   - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}  # MongoDB root user
    #   - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}  # MongoDB root password

  reverse_proxy:
    image: nginx:alpine
    ports:
      - "80:80"   # NGINX serves on port 80 for incoming traffic
    networks:
      - net-webapp
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro  # NGINX config file
      - ./static:/usr/share/nginx/static:ro                  # Static assets folder
      - ./html:/usr/share/nginx/html:ro                      # HTML files folder
    depends_on:
      - webapp   # Ensures the application is up before starting NGINX

networks:
  net-webapp:
    driver: bridge

  net-mongo:
    driver: bridge

  net-postgres:
    driver: bridge

volumes:
  pgdata:
  mongodata:
